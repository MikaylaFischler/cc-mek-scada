# Simple workflow for deploying static content to GitHub Pages
name: Deploy Installation Manifests

on:
  workflow_dispatch:
  push:
    branches:
      - main
      - latest
      - devel
  pull_request:
    branches:
      - main
      - latest
      - devel

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Single deploy job since we're just deploying
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Pages
        uses: actions/configure-pages@v3
      - name: Setup Python
        uses: actions/setup-python@v3.1.3
      - name: Extract branch name
        shell: bash
        run: echo "branch=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}" >> $GITHUB_OUTPUT
        id: extract_branch
      - name: Create outputs folder
        shell: bash
        run: mkdir temp; mkdir temp/manifests; mkdir temp/manifests/${{ steps.extract_branch.outputs.branch }}
      - name: Generate manifest
        run: python imgen.py
      - name: Move manifest
        run: mv install_manifest.json temp/manifests/${{ steps.extract_branch.outputs.branch }}
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          # Upload manifest JSON
          path: 'temp/'
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
